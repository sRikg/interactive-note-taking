In addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully connected feed-forward network, which is applied to each position separately and identically. This consists of two linear transformations with a ReLU activation in between.   -- ---------------------------------- -- -----      FFN(x)\u2004=\u2004max\u2006(0,xW\u2081\u2005+\u2005b\u2081)W\u2082\u2005+\u2005b\u2082      (2) While the linear transformations are the same across different positions, they use different parameters from layer to layer. Another way of describing this is as two convolutions with kernel size 1. The dimensionality of input and output is d_(model)\u2004=\u2004512, and the inner-layer has dimensionality d_(ff)\u2004=\u20042048. 
3.4 Embeddings and Softmax 
Similarly to other sequence transduction models, we use learned embeddings to convert the input tokens and output tokens to vectors of dimension d_(model). We also use the usual learned linear transformation and softmax function to convert the decoder output to predicted next-token probabilities. In our model, we share the same weight matrix between the two embedding layers and the pre-softmax linear transformation, similar to (press2016using, ). In the embedding layers, we multiply those weights by $\\sqrt{d_{\\text{model}}}$.